# Test of estimation ability

library(ABTMSE)
library(ABTGT)
library(snowfall)
loadABT()

setwd("G:/Shared drives/BM shared/1. Projects/Bluefin_Gene_Tag")
source("./Methods/Source/UMSY MPs.R") # loads MPs

OMs<-list.files("./OMs",full.names = T)
nOM <- length(OMs)

TDnam <- c("Rel. to catches", "Balanced","Uniform","Rel. to F","Conv. Tag","E. Tag")
TDs  <- c("Rel_cat_2019","Balanced","Uniform","Rel_F_2019","Conv_Tag","E_Tag")
nTD<-length(TDs)

ryrs = 10
tagnos<-c(100,200,500)*ryrs # total releases over 10 years (average per year)
ntn<-length(tagnos)

ind<-expand.grid(1:nTD,1:nOM,1:ntn)

dontrepeat=T
if(dontrepeat){
  Estfiles_s<-list.files("C:/temp/MSEs_GT/Estimation")
  tt<-as.numeric(sapply(Estfiles_s,function(x)strsplit(x,"_")[[1]][2]))
  oo<-as.numeric(sapply(Estfiles_s,function(x)strsplit(x,"_")[[1]][3]))
  tn<-as.numeric(sapply(Estfiles_s,function(x)strsplit(x,"_")[[1]][4]))
  filecodes<-paste(tt,oo,tn,sep="_")
  indcodes<-paste(ind[,1],ind[,2],ind[,3],sep="_")
  keep<-!(indcodes%in%filecodes)
  ind<-ind[keep,]
}

sfInit(parallel=T,cpus=parallel::detectCores()/2)
sfExport(list=list("Good_Obs","Perfect_Obs","Ann_Cat","Unreported_20","OM_1d"))
sfExport(list=as.list(paste0("U",(1:5)*2)))
sfExport(list=list("TDs","OMs","ryrs","ind","tagnos","MPs"))
sfLibrary("ABTMSE",character.only=TRUE,verbose=FALSE)
sfLibrary("ABTGT",character.only=TRUE,verbose=FALSE)

doMSEfunc<-function(x){
  tt<-ind[x,1]; oo<-ind[x,2]; tn<-ind[x,3]
  TD<-get(TDs[tt])
  OM<-readRDS(OMs[oo])
  set.seed(1)
  OM@seed<-oo+20000
  GT <- make_GT(OM,nT=tagnos[tn],RD=TDs[tt],ryrs=ryrs)
  GT$GTcheck=F
  obj<-new('MSE_GT',OM,MPs,GT=GT)
  saveRDS(obj,paste0("C:/temp/MSEs_GT/Estimation/MSE_",tt,"_",oo,"_",tn))
}

sfSapply(1:nrow(ind),doMSEfunc)



# ---- Runs for only tag design -------------------------------------------------------------------------------
# high release no adn high harvest rate
ind<-expand.grid(1:nTD,1:3,ntn) # ind<-expand.grid(2,1:3,ntn)

source("./Methods/Source/UMSY MPs.R") # loads MPs
MPs<-list(MPs[[5]])
sfInit(parallel=T,cpus=6)
sfExport(list=list("Good_Obs","Perfect_Obs","Ann_Cat","Unreported_20","OM_1d"))
sfExport(list=as.list(paste0("U",(1:5)*2)))
sfExport(list=list("TDs","OMs","ryrs","ind","tagnos","MPs"))
sfLibrary("ABTMSE",character.only=TRUE,verbose=FALSE)
sfLibrary("ABTGT",character.only=TRUE,verbose=FALSE)


dontrepeat=T

if(dontrepeat){
  Estfiles_s<-list.files("C:/temp/MSEs_GT/Estimation_TDes")
  tt<-as.numeric(sapply(Estfiles_s,function(x)strsplit(x,"_")[[1]][2]))
  oo<-as.numeric(sapply(Estfiles_s,function(x)strsplit(x,"_")[[1]][3]))
  tn<-as.numeric(sapply(Estfiles_s,function(x)strsplit(x,"_")[[1]][4]))
  filecodes<-paste(tt,oo,tn,sep="_")
  indcodes<-paste(ind[,1],ind[,2],ind[,3],sep="_")
  keep<-!(indcodes%in%filecodes)
  ind<-ind[keep,]
}

doMSEfunc_Des<-function(x){
  tt<-ind[x,1]; oo<-ind[x,2]; tn<-ind[x,3]
  TD<-get(TDs[tt])
  OM<-readRDS(OMs[oo])
  OM@seed<-oo+2000
  GT <- make_GT(OM,nT=tagnos[tn],RD=TDs[tt],ryrs=ryrs)
  GT$GTcheck=F
  obj<-new('MSE_GT',OM,MPs,GT=GT)
  saveRDS(obj,paste0("C:/temp/MSEs_GT/Estimation_TDes/MSE_",tt,"_",oo,"_",tn))
}

sfSapply(1:nrow(ind),doMSEfunc_Des)


