{
    "type": [
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        2,
        3,
        2,
        3,
        2,
        3,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        2
    ],
    "data": [
        "\nR version 4.1.0 (2021-05-18) -- \"Camp Pontanezen\"\nCopyright (C) 2021 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "library(openMSE)",
        "Loading required package: MSEtool\n",
        "Loading required package: snowfall\n",
        "Loading required package: snow\n",
        "Loading required package: DLMtool\n",
        "Loading required package: SAMtool\n",
        "\nAttaching package: ‘openMSE’\n\n",
        "The following object is masked from ‘package:SAMtool’:\n\n    userguide\n\n",
        "The following object is masked from ‘package:utils’:\n\n    demo\n\n",
        "Warning messages:\n",
        "1: package ‘snowfall’ was built under R version 4.1.3 \n",
        "2: package ‘snow’ was built under R version 4.1.1 \n",
        "3: replacing previous import ‘MSEtool::plot’ by ‘graphics::plot’ when loading ‘SAMtool’ \n",
        "> ",
        "library(wham)",
        "\nAttaching package: ‘wham’\n\n",
        "The following object is masked from ‘package:SAMtool’:\n\n    retro\n\n",
        "> ",
        "",
        "> ",
        "# 2. Run Simulations",
        "> ",
        "setwd(\"C:/Users/tcarruth/Documents/GitHub/AI-MP-EGB\")",
        "> ",
        "setwd(\"C:/GitHub/AI-MP-EGB\")",
        "Error in setwd(\"C:/GitHub/AI-MP-EGB\") : cannot change working directory\n",
        "> ",
        "Base<-readRDS(\"./Operating_Models/Base_dat.rda\")",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# --- Make exploratory MPs -------------------",
        "> ",
        "",
        "> ",
        "FMP<-function(x, Data, reps = 100, plot = FALSE, Flev=0.6, CV=0.1) {",
        "+ ",
        "",
        "+ ",
        "  Rec <- new(\"Rec\")",
        "+ ",
        "  y <- max(Data@Year) - Data@LHYear + 1",
        "+ ",
        "",
        "+ ",
        "  nyears <- length(Data@Misc$FleetPars$Find[x, ])",
        "+ ",
        "  q <- Data@Misc$FleetPars$qs[x]",
        "+ ",
        "  qvar <- Data@Misc$FleetPars$qvar[x, y]",
        "+ ",
        "  if (length(qvar) < 1)   qvar <- 1",
        "+ ",
        "  qinc <- Data@Misc$FleetPars$qinc[x]",
        "+ ",
        "  qcur <- qvar * q * (1 + qinc/100)^y",
        "+ ",
        "  HistE <- Data@OM$FinF[x]",
        "+ ",
        "  MSYE <- Flev/qcur",
        "+ ",
        "  Rec@Effort <- MSYE/HistE * rlnorm(1,0,CV)",
        "+ ",
        "",
        "+ ",
        "  Rec",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "F_hi<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.6)",
        "> ",
        "F_med<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.4)",
        "> ",
        "F_low<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.2)",
        "> ",
        "F_hi_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.6, CV=0.3)",
        "> ",
        "F_med_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.4, CV=0.3)",
        "> ",
        "F_low_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.2, CV=0.3)",
        "> ",
        "",
        "> ",
        "class(F_hi)<-class(F_med)<-class(F_low)<-class(F_hi_v)<-class(F_med_v)<-class(F_low_v)<-\"MP\"",
        "> ",
        "simMPs <- c(\"F_hi\",\"F_med\",\"F_low\",\"F_hi_v\",\"F_med_v\",\"F_low_v\")",
        "> ",
        "# test2 <- runMSE(MPs=simMPs); plot(test2)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "obj<-readRDS(\"./Data/Base.rda\") # WHAM assessment object",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "ni<-180",
        "> ",
        "MPs<-1:length(simMPs)",
        "> ",
        "inds<-expand.grid(1:ni,MPs)",
        "> ",
        "",
        "> ",
        "if(error){ # if for some reason the whole set did not fully complete, this filters inds according to the files calculated",
        "+ ",
        "  files<-list.files(\"C:/temp/MSEs3/\")",
        "+ ",
        "  nis<-sapply(files,function(x)strsplit(x,split=\"_\")[[1]][2])",
        "+ ",
        "  MPss<-sapply(files,function(x)substr(strsplit(x,split=\"_\")[[1]][3],1,1))",
        "+ ",
        "  fcode<-paste(nis,MPss,sep=\"_\")",
        "+ ",
        "  icode<-paste(as.character(inds[,1]),as.character(inds[,2]),sep=\"_\")",
        "+ ",
        "  keep<-!(icode%in%fcode)",
        "+ ",
        "  inds<-inds[keep,]",
        "+ ",
        "}",
        "Error: object 'error' not found\n",
        "> ",
        "",
        "> ",
        "parrun<-function(x,inds,obj,simMPs, Base){",
        "+ ",
        "    i<-inds[x,1]",
        "+ ",
        "    MP<-inds[x,2]",
        "+ ",
        "    seed<-(i*100)+i*MP",
        "+ ",
        "    set.seed(seed)",
        "+ ",
        "    OM <- MSEtool:::WHAM2OM(obj, report=F, nsim=200, LowerTri = 1,interval=1) # report = T produces a diagnostic showing WHAM vs OM matching of numbers at age",
        "+ ",
        "    OM@cpars$Data<-Base@cpars$Data",
        "+ ",
        "    OM@cpars$AddIbeta <-Base@cpars$AddIbeta",
        "+ ",
        "",
        "+ ",
        "    print(OM@cpars$Perr_y[1,1:10])",
        "+ ",
        "    OM@seed<-seed",
        "+ ",
        "    Hist<-runMSE(OM,Hist=T,extended=T)",
        "+ ",
        "    for(jj in 1:27)Hist@SampPars$Obs$AddInd_Stat[[jj]][,2]<-Hist@SampPars$Obs$AddInd_Stat[[jj]][,2]/2 # test of info in reduced CV",
        "+ ",
        "    MSE<-Project(Hist,MPs=simMPs[MP],extended=T)",
        "+ ",
        "    saveRDS(MSE,paste0(\"C:/temp/MSEs4/Run_\",i,\"_\",MP,\".rda\"))",
        "+ ",
        "    #print(paste(\"i =\",i,\"  MP =\",MP))",
        "+ ",
        "}",
        "> ",
        "length(inds)",
        "[1] 2\n",
        "> ",
        "nrow(inds)",
        "[1] 1080\n",
        "> ",
        "setup()",
        "R Version:  R version 4.1.0 (2021-05-18) \n\n",
        "snowfall 1.84-6.2 initialized (using snow 0.4-4): parallel execution on 10 CPUs.\n\n",
        "Library MSEtool loaded.\n",
        "Library MSEtool loaded in cluster.\n\n",
        "Library DLMtool loaded.\n",
        "Library DLMtool loaded in cluster.\n\n",
        "Library SAMtool loaded.\n",
        "Library SAMtool loaded in cluster.\n\n",
        "> ",
        "sfLibrary(wham)",
        "Library wham loaded.\n",
        "Library wham loaded in cluster.\n\n",
        "> ",
        "sfExport(list=list(\"FMP\",\"F_hi\",\"F_med\",\"F_low\",\"F_hi_v\",\"F_med_v\",\"F_low_v\"))",
        "> ",
        "",
        "> ",
        "iss<-(1:nrow(inds))#[inds[,1]>60]",
        "> ",
        "sfSapply(iss,parrun,inds=inds,obj=obj,simMPs=simMPs,Base=Base)",
        "Error in unserialize(node$con) : error reading from connection\n",
        "> ",
        "files<-list.files(\"C:/temp/MSEs4/\")",
        "> ",
        "  nis<-sapply(files,function(x)strsplit(x,split=\"_\")[[1]][2])",
        "> ",
        "  MPss<-sapply(files,function(x)substr(strsplit(x,split=\"_\")[[1]][3],1,1))",
        "> ",
        "  fcode<-paste(nis,MPss,sep=\"_\")",
        "> ",
        "  icode<-paste(as.character(inds[,1]),as.character(inds[,2]),sep=\"_\")",
        "> ",
        "  keep<-!(icode%in%fcode)",
        "> ",
        "  inds<-inds[keep,]",
        "> ",
        "nrow(inds)",
        "[1] 994\n",
        "> ",
        "iss<-(1:nrow(inds))#[inds[,1]>60]",
        "> ",
        "sfSapply(iss,parrun,inds=inds,obj=obj,simMPs=simMPs,Base=Base)",
        "Error in serialize(data, node$con) : error writing to connection\n",
        "> ",
        "sfStop()",
        "\nStopping cluster\n\n",
        "Error in serialize(data, node$con) : error writing to connection\n",
        "> ",
        "sfStop()",
        "\nStopping cluster\n\n",
        "Error in serialize(data, node$con) : error writing to connection\n",
        "\nRestarting R session...\n\n"
    ]
}