ageind<-1:dim(naa)[2]
dims<-c(nsim,1,nyears)
zeros<-array(0,dims)
# N0 back inputed
rec<-naa[,1,2:nyears]#*exp(Maa[,1,2:nyears])
muR0<-apply(rec,1,mean) # mean R0 is assumed for most recent N0 - will be filled anyway using LowerTri argument
N0<-array(cbind(rec,muR0),dims)
naa<-abind(N0,naa,along=2)
# F, weight, length and maturity assumed to be zero
faa<-abind(zeros,faa,along=2)
waa<-abind(zeros,waa,along=2)
Mataa<-abind(zeros,Mataa,along=2)
laa<-abind(zeros,laa,along=2)
fecaa<-abind(zeros,fecaa,along=2)
dim(waa)
Maa<-abind(array(tiny + .Machine$double.eps,dim(Maa[,1,])),Maa,along=2)
tiny<-1E-10
Maa<-abind(array(tiny + .Machine$double.eps,dim(Maa[,1,])),Maa,along=2)
dim(Maa)
dim(fecaa)
n_age <- dim(naa)[2]
maxage<-dim(naa)[2] - 1
n_age
maxage
SRrel <- 1
h <- rep(h, nsim)
OM<-new('OM')
surv <- array(1, dim(Maa))
surv[, -1, ] <- exp(-apply(Maa[, -n_age, ], c(1,3), cumsum)) %>% aperm(c(2,1,3))
if(plusgroup) {
surv[, n_age, ] <- surv[, n_age, ]/(1 - exp(-Maa[, n_age, ]))
}
dim(surv)
dim(fecaa)
SSBpR <- apply(surv * fecaa, c(1, 3), sum)
plusgroup
surv
OM<-VPA2OM(Name, proyears, interval, CurrentYr, h=h, Obs, Imp,
naa, faa, waa, Mataa, Maa, laa, fecaa=waa*Mataa,
nyr_par_mu, LowerTri,
recind=1, plusgroup, altinit=0, fixq1=fixq1,# recind = 1 because WHAM models report at age arrays starting second year of life ie not age zero
report=report, silent=silent, R0 = apply(naa[,1,]*exp(Maa[,1,]),1,mean))
source("~/GitHub/MSEtool/R/VPA2OM.R", echo=TRUE)
OM<-VPA2OM(Name, proyears, interval, CurrentYr, h=h, Obs, Imp,
naa, faa, waa, Mataa, Maa, laa, fecaa=waa*Mataa,
nyr_par_mu, LowerTri,
recind=1, plusgroup, altinit=0, fixq1=fixq1,# recind = 1 because WHAM models report at age arrays starting second year of life ie not age zero
report=report, silent=silent, R0 = apply(naa[,1,]*exp(Maa[,1,]),1,mean))
devtools::load_all('MSEtool')
devtools::load_all('C:/Users/tcarruth/Documents/R/win-library/4.1/MSEtool')
source("~/GitHub/MSEtool/R/VPA2OM.R", echo=TRUE)
OM<-VPA2OM(Name, proyears, interval, CurrentYr, h=h, Obs, Imp,
naa, faa, waa, Mataa, Maa, laa, fecaa=waa*Mataa,
nyr_par_mu, LowerTri,
recind=1, plusgroup, altinit=0, fixq1=fixq1,# recind = 1 because WHAM models report at age arrays starting second year of life ie not age zero
report=report, silent=silent, R0 = apply(naa[,1,]*exp(Maa[,1,]),1,mean))
library(openMSE)
library(openMSE)
OM<-VPA2OM(Name, proyears, interval, CurrentYr, h=h, Obs, Imp,
naa, faa, waa, Mataa, Maa, laa, fecaa=waa*Mataa,
nyr_par_mu, LowerTri,
recind=1, plusgroup, altinit=0, fixq1=fixq1,# recind = 1 because WHAM models report at age arrays starting second year of life ie not age zero
report=report, silent=silent, R0 = apply(naa[,1,]*exp(Maa[,1,]),1,mean))
devtools::install_github('blue-matter/MSEtool')
devtools::install_github('blue-matter/MSEtool')
library(openMSE)
library(wham)
# 2. Run Simulations
setwd("C:/Users/tcarruth/Documents/GitHub/AI-MP-EGB")
setwd("C:/GitHub/AI-MP-EGB")
Base<-readRDS("./Operating_Models/Base_dat.rda")
# --- Make exploratory MPs -------------------
FMP<-function(x, Data, reps = 100, plot = FALSE, Flev=0.6, CV=0.1) {
Rec <- new("Rec")
y <- max(Data@Year) - Data@LHYear + 1
nyears <- length(Data@Misc$FleetPars$Find[x, ])
q <- Data@Misc$FleetPars$qs[x]
qvar <- Data@Misc$FleetPars$qvar[x, y]
if (length(qvar) < 1)   qvar <- 1
qinc <- Data@Misc$FleetPars$qinc[x]
qcur <- qvar * q * (1 + qinc/100)^y
HistE <- Data@OM$FinF[x]
MSYE <- Flev/qcur
Rec@Effort <- MSYE/HistE * rlnorm(1,0,CV)
Rec
}
F_hi<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.6)
F_med<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.4)
F_low<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.2)
F_hi_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.6, CV=0.3)
F_med_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.4, CV=0.3)
F_low_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.2, CV=0.3)
class(F_hi)<-class(F_med)<-class(F_low)<-class(F_hi_v)<-class(F_med_v)<-class(F_low_v)<-"MP"
simMPs <- c("F_hi","F_med","F_low","F_hi_v","F_med_v","F_low_v")
# test2 <- runMSE(MPs=simMPs); plot(test2)
obj<-readRDS("./Data/Base.rda") # WHAM assessment object
ni<-180
MPs<-1:length(simMPs)
inds<-expand.grid(1:ni,MPs)
x<-1
i<-inds[x,1]
MP<-inds[x,2]
seed<-(i*100)+i*MP
set.seed(seed)
OM <- MSEtool:::WHAM2OM(obj, report=F, nsim=200, LowerTri = 1,interval=1) # report = T produces a diagnostic showing WHAM vs OM matching of numbers at age
OM@cpars$Data<-Base@cpars$Data
OM@cpars$AddIbeta <-Base@cpars$AddIbeta
print(OM@cpars$Perr_y[1,1:10])
OM@seed<-seed
Hist<-runMSE(OM,Hist=T,extended=T)
for(i in 1:24)Hist@SampPars$Obs$AddInd_Stat[[i]][,2]<-Hist@SampPars$Obs$AddInd_Stat[[i]][,2]/2 # test of info in reduced CV
MSE<-Project(Hist,MPs=simMPs[MP],extended=T)
parrun<-function(x,inds,obj,simMPs, Base){
i<-inds[x,1]
MP<-inds[x,2]
seed<-(i*100)+i*MP
set.seed(seed)
OM <- MSEtool:::WHAM2OM(obj, report=F, nsim=200, LowerTri = 1,interval=1) # report = T produces a diagnostic showing WHAM vs OM matching of numbers at age
OM@cpars$Data<-Base@cpars$Data
OM@cpars$AddIbeta <-Base@cpars$AddIbeta
print(OM@cpars$Perr_y[1,1:10])
OM@seed<-seed
Hist<-runMSE(OM,Hist=T,extended=T)
for(i in 1:24)Hist@SampPars$Obs$AddInd_Stat[[i]][,2]<-Hist@SampPars$Obs$AddInd_Stat[[i]][,2]/2 # test of info in reduced CV
MSE<-Project(Hist,MPs=simMPs[MP],extended=T)
saveRDS(MSE,paste0("C:/temp/MSEs3/Run_",i,"_",MP,".rda"))
#print(paste("i =",i,"  MP =",MP))
}
setup()
sfLibrary(wham)
sfExport(list=list("FMP","F_hi","F_med","F_low","F_hi_v","F_med_v","F_low_v"))
iss<-(1:nrow(inds))[inds[,1]>60]
sfSapply(iss,parrun,inds=inds,obj=obj,simMPs=simMPs,Base=Base)
inds[,1]
(1:nrow(inds))
inds[,1]
iss<-(1:nrow(inds))#[inds[,1]>60]
sfSapply(iss,parrun,inds=inds,obj=obj,simMPs=simMPs,Base=Base)
head(inds)
library(openMSE)
library(wham)
# 2. Run Simulations
setwd("C:/Users/tcarruth/Documents/GitHub/AI-MP-EGB")
setwd("C:/GitHub/AI-MP-EGB")
Base<-readRDS("./Operating_Models/Base_dat.rda")
# --- Make exploratory MPs -------------------
FMP<-function(x, Data, reps = 100, plot = FALSE, Flev=0.6, CV=0.1) {
Rec <- new("Rec")
y <- max(Data@Year) - Data@LHYear + 1
nyears <- length(Data@Misc$FleetPars$Find[x, ])
q <- Data@Misc$FleetPars$qs[x]
qvar <- Data@Misc$FleetPars$qvar[x, y]
if (length(qvar) < 1)   qvar <- 1
qinc <- Data@Misc$FleetPars$qinc[x]
qcur <- qvar * q * (1 + qinc/100)^y
HistE <- Data@OM$FinF[x]
MSYE <- Flev/qcur
Rec@Effort <- MSYE/HistE * rlnorm(1,0,CV)
Rec
}
F_hi<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.6)
F_med<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.4)
F_low<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.2)
F_hi_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.6, CV=0.3)
F_med_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.4, CV=0.3)
F_low_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.2, CV=0.3)
class(F_hi)<-class(F_med)<-class(F_low)<-class(F_hi_v)<-class(F_med_v)<-class(F_low_v)<-"MP"
simMPs <- c("F_hi","F_med","F_low","F_hi_v","F_med_v","F_low_v")
# test2 <- runMSE(MPs=simMPs); plot(test2)
obj<-readRDS("./Data/Base.rda") # WHAM assessment object
ni<-180
MPs<-1:length(simMPs)
inds<-expand.grid(1:ni,MPs)
head(inds)
MPs
ni
expand.grid(1:ni,MPs)
inds<-expand.grid(1:ni,MPs)
inds
nrow(inds)
parrun<-function(x,inds,obj,simMPs, Base){
i<-inds[x,1]
MP<-inds[x,2]
seed<-(i*100)+i*MP
set.seed(seed)
OM <- MSEtool:::WHAM2OM(obj, report=F, nsim=200, LowerTri = 1,interval=1) # report = T produces a diagnostic showing WHAM vs OM matching of numbers at age
OM@cpars$Data<-Base@cpars$Data
OM@cpars$AddIbeta <-Base@cpars$AddIbeta
print(OM@cpars$Perr_y[1,1:10])
OM@seed<-seed
Hist<-runMSE(OM,Hist=T,extended=T)
for(i in 1:24)Hist@SampPars$Obs$AddInd_Stat[[i]][,2]<-Hist@SampPars$Obs$AddInd_Stat[[i]][,2]/2 # test of info in reduced CV
MSE<-Project(Hist,MPs=simMPs[MP],extended=T)
saveRDS(MSE,paste0("C:/temp/MSEs3/Run_",i,"_",MP,".rda"))
#print(paste("i =",i,"  MP =",MP))
}
setup()
sfLibrary(wham)
sfExport(list=list("FMP","F_hi","F_med","F_low","F_hi_v","F_med_v","F_low_v"))
iss<-(1:nrow(inds))#[inds[,1]>60]
sfSapply(iss,parrun,inds=inds,obj=obj,simMPs=simMPs,Base=Base)
inds
iss
inds
obj
parrun
parrun<-function(x,inds,obj,simMPs, Base){
i<-inds[x,1]
MP<-inds[x,2]
seed<-(i*100)+i*MP
set.seed(seed)
OM <- MSEtool:::WHAM2OM(obj, report=F, nsim=200, LowerTri = 1,interval=1) # report = T produces a diagnostic showing WHAM vs OM matching of numbers at age
OM@cpars$Data<-Base@cpars$Data
OM@cpars$AddIbeta <-Base@cpars$AddIbeta
print(OM@cpars$Perr_y[1,1:10])
OM@seed<-seed
Hist<-runMSE(OM,Hist=T,extended=T)
for(jj in 1:24)Hist@SampPars$Obs$AddInd_Stat[[jj]][,2]<-Hist@SampPars$Obs$AddInd_Stat[[jj]][,2]/2 # test of info in reduced CV
MSE<-Project(Hist,MPs=simMPs[MP],extended=T)
saveRDS(MSE,paste0("C:/temp/MSEs3/Run_",i,"_",MP,".rda"))
#print(paste("i =",i,"  MP =",MP))
}
setup()
sfLibrary(wham)
sfExport(list=list("FMP","F_hi","F_med","F_low","F_hi_v","F_med_v","F_low_v"))
iss<-(1:nrow(inds))#[inds[,1]>60]
sfSapply(iss,parrun,inds=inds,obj=obj,simMPs=simMPs,Base=Base)
?list.files
files<-list.files("C:/temp/MSEs3/")
files
?strsplit
test<-lapply(files,strsplit,by=c("Run","_",".rda")
)
test<-lapply(files,strsplit,split=c("Run","_",".rda")
)
test
test<-lapply(files,strsplit,split="_")
test
test<-lapply(files,function(x)strsplit(x,split="_")[[1]][1])
test
nis<-sapply(files,function(x)strsplit(x,split="_")[[1]][2])
nis
sapply(files,function(x)strsplit(x,split="_")[[1]][2])
MPss<-sapply(files,function(x)strsplit(x,split="_")[[1]][3])
MPss
MPss<-sapply(files,function(x)substr(strsplit(x,split="_")[[1]][3],1,1))
MPss
fcode<-paste(nis,MPss,sep="_")
icode<-paste(inds[,1],inds[2],sep="_")
fcode
icode
inds[,1]
inds[2]
icode<-paste(as.character(inds[,1]),as.character(inds[2]),sep="_")
icode
as.character(inds[,1])
as.character(inds[2])
ni<-180
MPs<-1:length(simMPs)
inds<-expand.grid(1:ni,MPs)
icode<-paste(as.character(inds[,1]),as.character(inds[2]),sep="_")
icode
fcode
inds[,1]
inds[2]
icode<-paste(as.character(inds[,1]),as.character(inds[,2]),sep="_")
icode
keep<-!(fcode%in%icode)
keep<-!(icode%in%fcode)
sum(keep)
length(fcode)
length(icode)
inds<-inds[keep,]
inds
parrun<-function(x,inds,obj,simMPs, Base){
i<-inds[x,1]
MP<-inds[x,2]
seed<-(i*100)+i*MP
set.seed(seed)
OM <- MSEtool:::WHAM2OM(obj, report=F, nsim=200, LowerTri = 1,interval=1) # report = T produces a diagnostic showing WHAM vs OM matching of numbers at age
OM@cpars$Data<-Base@cpars$Data
OM@cpars$AddIbeta <-Base@cpars$AddIbeta
print(OM@cpars$Perr_y[1,1:10])
OM@seed<-seed
Hist<-runMSE(OM,Hist=T,extended=T)
for(jj in 1:24)Hist@SampPars$Obs$AddInd_Stat[[jj]][,2]<-Hist@SampPars$Obs$AddInd_Stat[[jj]][,2]/2 # test of info in reduced CV
MSE<-Project(Hist,MPs=simMPs[MP],extended=T)
saveRDS(MSE,paste0("C:/temp/MSEs3/Run_",i,"_",MP,".rda"))
#print(paste("i =",i,"  MP =",MP))
}
setup()
sfLibrary(wham)
sfExport(list=list("FMP","F_hi","F_med","F_low","F_hi_v","F_med_v","F_low_v"))
iss<-(1:nrow(inds))#[inds[,1]>60]
sfSapply(iss,parrun,inds=inds,obj=obj,simMPs=simMPs,Base=Base)
sfStop()
sfStop()
library(openMSE)
library(wham)
# 2. Run Simulations
setwd("C:/Users/tcarruth/Documents/GitHub/AI-MP-EGB")
setwd("C:/GitHub/AI-MP-EGB")
Base<-readRDS("./Operating_Models/Base_dat.rda")
# --- Make exploratory MPs -------------------
FMP<-function(x, Data, reps = 100, plot = FALSE, Flev=0.6, CV=0.1) {
Rec <- new("Rec")
y <- max(Data@Year) - Data@LHYear + 1
nyears <- length(Data@Misc$FleetPars$Find[x, ])
q <- Data@Misc$FleetPars$qs[x]
qvar <- Data@Misc$FleetPars$qvar[x, y]
if (length(qvar) < 1)   qvar <- 1
qinc <- Data@Misc$FleetPars$qinc[x]
qcur <- qvar * q * (1 + qinc/100)^y
HistE <- Data@OM$FinF[x]
MSYE <- Flev/qcur
Rec@Effort <- MSYE/HistE * rlnorm(1,0,CV)
Rec
}
F_hi<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.6)
F_med<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.4)
F_low<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.2)
F_hi_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.6, CV=0.3)
F_med_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.4, CV=0.3)
F_low_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.2, CV=0.3)
class(F_hi)<-class(F_med)<-class(F_low)<-class(F_hi_v)<-class(F_med_v)<-class(F_low_v)<-"MP"
simMPs <- c("F_hi","F_med","F_low","F_hi_v","F_med_v","F_low_v")
# test2 <- runMSE(MPs=simMPs); plot(test2)
obj<-readRDS("./Data/Base.rda") # WHAM assessment object
ni<-180
MPs<-1:length(simMPs)
inds<-expand.grid(1:ni,MPs
)
files<-list.files("C:/temp/MSEs3/")
nis<-sapply(files,function(x)strsplit(x,split="_")[[1]][2])
MPss<-sapply(files,function(x)substr(strsplit(x,split="_")[[1]][3],1,1))
fcode<-paste(nis,MPss,sep="_")
icode<-paste(as.character(inds[,1]),as.character(inds[,2]),sep="_")
keep<-!(icode%in%fcode)
inds<-inds[keep,]
nrow(inds)
parrun<-function(x,inds,obj,simMPs, Base){
i<-inds[x,1]
MP<-inds[x,2]
seed<-(i*100)+i*MP
set.seed(seed)
OM <- MSEtool:::WHAM2OM(obj, report=F, nsim=200, LowerTri = 1,interval=1) # report = T produces a diagnostic showing WHAM vs OM matching of numbers at age
OM@cpars$Data<-Base@cpars$Data
OM@cpars$AddIbeta <-Base@cpars$AddIbeta
print(OM@cpars$Perr_y[1,1:10])
OM@seed<-seed
Hist<-runMSE(OM,Hist=T,extended=T)
for(jj in 1:24)Hist@SampPars$Obs$AddInd_Stat[[jj]][,2]<-Hist@SampPars$Obs$AddInd_Stat[[jj]][,2]/2 # test of info in reduced CV
MSE<-Project(Hist,MPs=simMPs[MP],extended=T)
saveRDS(MSE,paste0("C:/temp/MSEs3/Run_",i,"_",MP,".rda"))
#print(paste("i =",i,"  MP =",MP))
}
setup()
sfLibrary(wham)
sfExport(list=list("FMP","F_hi","F_med","F_low","F_hi_v","F_med_v","F_low_v"))
iss<-(1:nrow(inds))#[inds[,1]>
sfSapply(iss,parrun,inds=inds,obj=obj,simMPs=simMPs,Base=Base)
library(openMSE)
library(abind)
setwd("C:/Users/tcarruth/Documents/GitHub/AI-MP-EGB")
setwd("C:/GitHub/AI-MP-EGB")
# 3. Process Simulation Data
MSEfiles<-paste0("C:/temp/MSEs3/Run_",rep(1:180,each=6),"_",rep(1:6,180),".rda")
# MSEfiles<-list.files("C:/temp/MSEs",full.names=T)
nMSE<-length(MSEfiles)
MSE1<-readRDS(MSEfiles[1])
nsim<-MSE1@nsim
nreps<-nsim*nMSE
# Function to process data - chooses a year then provide previous five years of all index data age 2+
procdat<-function(x,MSEfiles){
MSE<-readRDS(MSEfiles[x])
nsim<-MSE@nsim
Years<-sample(4:MSE@proyears,nsim,replace=T)
Years2<-MSE@nyears+Years
VBind<-cbind(1:nsim,rep(1,nsim),Years)
VB<-MSE@VB[VBind]
aall<-rep(2:9,3)
as<-rep(3:9)
keep<-aall%in%as
getind<-function(j,MSE,Years2){
Ind<-MSE@PPD[[1]]@AddInd[j,keep,]
yind<-Years2[j]-8:1 # the five previous years of observations
as.vector(t(Ind[,yind]))
}
cbind(VB,t(sapply(1:nsim,getind,MSE=MSE,Years2=Years2)))
}
setup()
out<-sfLapply(1:nMSE,procdat,MSEfiles=MSEfiles)
out<-sapply(1:nMSE,procdat,MSEfiles=MSEfiles)
simdat<-as.data.frame(abind(out,along=1))
names(simdat)<-c("VB",paste0("IV",1:(ncol(simdat)-1)))
saveRDS(simdat,"./Sim_Data/simdataL3.rda")
library(openMSE)
library(abind)
setwd("C:/Users/tcarruth/Documents/GitHub/AI-MP-EGB")
setwd("C:/GitHub/AI-MP-EGB")
# 3. Process Simulation Data
MSEfiles<-paste0("C:/temp/MSEs3/Run_",rep(1:180,each=6),"_",rep(1:6,180),".rda")
# MSEfiles<-list.files("C:/temp/MSEs",full.names=T)
nMSE<-length(MSEfiles)
MSE1<-readRDS(MSEfiles[1])
nsim<-MSE1@nsim
nreps<-nsim*nMSE
length(MSEfiles)
procdat<-function(x,MSEfiles){
MSE<-readRDS(MSEfiles[x])
nsim<-MSE@nsim
Years<-sample(4:MSE@proyears,nsim,replace=T)
Years2<-MSE@nyears+Years
VBind<-cbind(1:nsim,rep(1,nsim),Years)
VB<-MSE@VB[VBind]
aall<-rep(2:9,3)
as<-rep(3:9)
keep<-aall%in%as
getind<-function(j,MSE,Years2){
Ind<-MSE@PPD[[1]]@AddInd[j,keep,]
yind<-Years2[j]-8:1 # the five previous years of observations
as.vector(t(Ind[,yind]))
}
cbind(VB,t(sapply(1:nsim,getind,MSE=MSE,Years2=Years2)))
}
setup()
out<-sfLapply(1:nMSE,procdat,MSEfiles=MSEfiles)
length(out)
simdat<-as.data.frame(abind(out,along=1))
nrow(simdat)
ncol(simdat)
hist(simdat[,1])
names(simdat)<-c("VB",paste0("IV",1:(ncol(simdat)-1)))
saveRDS(simdat,"./Sim_Data/simdataL3.rda")
library(openMSE)
library(wham)
# 2. Run Simulations
setwd("C:/Users/tcarruth/Documents/GitHub/AI-MP-EGB")
setwd("C:/GitHub/AI-MP-EGB")
Base<-readRDS("./Operating_Models/Base_dat.rda")
# --- Make exploratory MPs -------------------
FMP<-function(x, Data, reps = 100, plot = FALSE, Flev=0.6, CV=0.1) {
Rec <- new("Rec")
y <- max(Data@Year) - Data@LHYear + 1
nyears <- length(Data@Misc$FleetPars$Find[x, ])
q <- Data@Misc$FleetPars$qs[x]
qvar <- Data@Misc$FleetPars$qvar[x, y]
if (length(qvar) < 1)   qvar <- 1
qinc <- Data@Misc$FleetPars$qinc[x]
qcur <- qvar * q * (1 + qinc/100)^y
HistE <- Data@OM$FinF[x]
MSYE <- Flev/qcur
Rec@Effort <- MSYE/HistE * rlnorm(1,0,CV)
Rec
}
F_hi<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.6)
F_med<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.4)
F_low<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.2)
F_hi_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.6, CV=0.3)
F_med_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.4, CV=0.3)
F_low_v<-function(x,Data,reps)FMP(x=x,Data=Data,reps=reps,Flev=0.2, CV=0.3)
class(F_hi)<-class(F_med)<-class(F_low)<-class(F_hi_v)<-class(F_med_v)<-class(F_low_v)<-"MP"
simMPs <- c("F_hi","F_med","F_low","F_hi_v","F_med_v","F_low_v")
# test2 <- runMSE(MPs=simMPs); plot(test2)
obj<-readRDS("./Data/Base.rda") # WHAM assessment object
ni<-180
MPs<-1:length(simMPs)
inds<-expand.grid(1:ni,MPs)
if(error){ # if for some reason the whole set did not fully complete, this filters inds according to the files calculated
files<-list.files("C:/temp/MSEs3/")
nis<-sapply(files,function(x)strsplit(x,split="_")[[1]][2])
MPss<-sapply(files,function(x)substr(strsplit(x,split="_")[[1]][3],1,1))
fcode<-paste(nis,MPss,sep="_")
icode<-paste(as.character(inds[,1]),as.character(inds[,2]),sep="_")
keep<-!(icode%in%fcode)
inds<-inds[keep,]
}
parrun<-function(x,inds,obj,simMPs, Base){
i<-inds[x,1]
MP<-inds[x,2]
seed<-(i*100)+i*MP
set.seed(seed)
OM <- MSEtool:::WHAM2OM(obj, report=F, nsim=200, LowerTri = 1,interval=1) # report = T produces a diagnostic showing WHAM vs OM matching of numbers at age
OM@cpars$Data<-Base@cpars$Data
OM@cpars$AddIbeta <-Base@cpars$AddIbeta
print(OM@cpars$Perr_y[1,1:10])
OM@seed<-seed
Hist<-runMSE(OM,Hist=T,extended=T)
for(jj in 1:27)Hist@SampPars$Obs$AddInd_Stat[[jj]][,2]<-Hist@SampPars$Obs$AddInd_Stat[[jj]][,2]/2 # test of info in reduced CV
MSE<-Project(Hist,MPs=simMPs[MP],extended=T)
saveRDS(MSE,paste0("C:/temp/MSEs4/Run_",i,"_",MP,".rda"))
#print(paste("i =",i,"  MP =",MP))
}
length(inds)
nrow(inds)
setup()
sfLibrary(wham)
sfExport(list=list("FMP","F_hi","F_med","F_low","F_hi_v","F_med_v","F_low_v"))
iss<-(1:nrow(inds))#[inds[,1]>60]
sfSapply(iss,parrun,inds=inds,obj=obj,simMPs=simMPs,Base=Base)
files<-list.files("C:/temp/MSEs4/")
nis<-sapply(files,function(x)strsplit(x,split="_")[[1]][2])
MPss<-sapply(files,function(x)substr(strsplit(x,split="_")[[1]][3],1,1))
fcode<-paste(nis,MPss,sep="_")
icode<-paste(as.character(inds[,1]),as.character(inds[,2]),sep="_")
keep<-!(icode%in%fcode)
inds<-inds[keep,]
nrow(inds)
iss<-(1:nrow(inds))#[inds[,1]>60]
sfSapply(iss,parrun,inds=inds,obj=obj,simMPs=simMPs,Base=Base)
sfStop()
sfStop()
